{
"version":3,
"file":"module$node_modules$highlight_DOT_js$lib$languages$yaml.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAe,uDAAf,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACpHD,MAAA,CAAOC,OAAP,CAAiBC,QAAQ,CAACC,IAAD,CAAO,CAqC9B,MAAO,CACLC,iBAAkB,CAAA,CADb,CAELC,QAAS,CAAC,KAAD,CAAQ,MAAR,CAAgB,MAAhB,CAFJ,CAGLC,SAAU,CAjCFC,CACRC,UAAW,MADHD,CAERE,SAAU,CACR,CAAEC,MAAO,iCAAT,CADQ,CAER,CAAEA,MAAO,mCAAT,CAFQ,CAGR,CAAEA,MAAO,mCAAT,CAHQ,CAFFH,CAiCE,CAER,CACEC,UAAW,MADb,CAEEE,MAAO,SAFT,CAGEC,UAAW,EAHb,CAFQ,CAOR,CAKEH,UAAW,QALb,CAMEE,MAAO,8DANT,CAPQ;AAeR,CACEA,MAAO,gBADT,CACqBE,IAAK,YAD1B,CAEEC,YAAa,MAFf,CAGEC,aAAc,CAAA,CAHhB,CAIEC,WAAY,CAAA,CAJd,CAKEJ,UAAW,CALb,CAfQ,CAsBR,CACEH,UAAW,MADb,CAEEE,MAAO,GAAPA,CAAaP,IAAbO,CAAkBM,mBAFpB,CAtBQ,CA0BR,CACER,UAAW,MADb,CAEEE,MAAO,IAAPA,CAAcP,IAAdO,CAAmBM,mBAFrB,CA1BQ,CA8BR,CACER,UAAW,MADb,CAEEE,MAAO,MAAPA,CAAaP,IAAbO,CAAkBM,mBAAlBN,CAAwC,GAF1C,CA9BQ,CAkCR,CACEF,UAAW,MADb,CAEEE,MAAO,KAAPA,CAAeP,IAAfO,CAAoBM,mBAApBN,CAA0C,GAF5C,CAlCQ,CAsCR,CACEF,UAAW,QADb,CAGAE,MAAO,iBAHP,CAIEC,UAAW,CAJb,CAtCQ,CA4CRR,IA5CQ,CA4CHc,iBA5CG,CA6CR,CACEC,cArFSC,wBAoFX,CAEEC,SAAU,CAACC,QAtFFF,wBAsFC,CAFZ,CA7CQ,CAmDR,CACEX,UAAW,QADb;AAEEE,MAAOP,IAAPO,CAAYY,WAAZZ,CAA0B,KAF5B,CAnDQ,CAjBCa,CACXf,UAAW,QADAe,CAEXZ,UAAW,CAFAY,CAGXd,SAAU,CACR,CAACC,MAAO,GAAR,CAAaE,IAAK,GAAlB,CADQ,CAER,CAACF,MAAO,GAAR,CAAaE,IAAK,GAAlB,CAFQ,CAGR,CAACF,MAAO,KAAR,CAHQ,CAHCa,CAQXjB,SAAU,CACRH,IADQ,CACHqB,gBADG,CAfaC,CACvBjB,UAAW,mBADYiB,CAEvBhB,SAAU,CACR,CAAEC,MAAO,IAAT,CAAiBE,IAAK,IAAtB,CADQ,CAER,CAAEF,MAAO,IAAT,CAAgBE,IAAK,GAArB,CAFQ,CAFaa,CAeb,CARCF,CAiBD,CAHL,CArCuB,CADoF;",
"sources":["node_modules/highlight_DOT_js/lib/languages/yaml.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$highlight_DOT_js$lib$languages$yaml\"] = function(global,require,module,exports) {\nmodule.exports = function(hljs) {\n  var LITERALS = 'true false yes no null';\n\n  // Define keys as starting with a word character\n  // ...containing word chars, spaces, colons, forward-slashes, hyphens and periods\n  // ...and ending with a colon followed immediately by a space, tab or newline.\n  // The YAML spec allows for much more than this, but this covers most use-cases.\n  var KEY = {\n    className: 'attr',\n    variants: [\n      { begin: '\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)' },\n      { begin: '\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)' }, //double quoted keys\n      { begin: '\\'\\\\w[\\\\w :\\\\/.-]*\\':(?=[ \\t]|$)' } //single quoted keys\n    ]\n  };\n\n  var TEMPLATE_VARIABLES = {\n    className: 'template-variable',\n    variants: [\n      { begin: '\\{\\{', end: '\\}\\}' }, // jinja templates Ansible\n      { begin: '%\\{', end: '\\}' } // Ruby i18n\n    ]\n  };\n  var STRING = {\n    className: 'string',\n    relevance: 0,\n    variants: [\n      {begin: /'/, end: /'/},\n      {begin: /\"/, end: /\"/},\n      {begin: /\\S+/}\n    ],\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      TEMPLATE_VARIABLES\n    ]\n  };\n\n  return {\n    case_insensitive: true,\n    aliases: ['yml', 'YAML', 'yaml'],\n    contains: [\n      KEY,\n      {\n        className: 'meta',\n        begin: '^---\\s*$',\n        relevance: 10\n      },\n      { // multi line string\n        // Blocks start with a | or > followed by a newline\n        //\n        // Indentation of subsequent lines must be the same to\n        // be considered part of the block\n        className: 'string',\n        begin: '[\\\\|>]([0-9]?[+-])?[ ]*\\\\n( *)[\\\\S ]+\\\\n(\\\\2[\\\\S ]+\\\\n?)*',\n      },\n      { // Ruby/Rails erb\n        begin: '<%[%=-]?', end: '[%-]?%>',\n        subLanguage: 'ruby',\n        excludeBegin: true,\n        excludeEnd: true,\n        relevance: 0\n      },\n      { // local tags\n        className: 'type',\n        begin: '!' + hljs.UNDERSCORE_IDENT_RE,\n      },\n      { // data type\n        className: 'type',\n        begin: '!!' + hljs.UNDERSCORE_IDENT_RE,\n      },\n      { // fragment id &ref\n        className: 'meta',\n        begin: '&' + hljs.UNDERSCORE_IDENT_RE + '$',\n      },\n      { // fragment reference *ref\n        className: 'meta',\n        begin: '\\\\*' + hljs.UNDERSCORE_IDENT_RE + '$'\n      },\n      { // array listing\n        className: 'bullet',\n      // TODO: remove |$ hack when we have proper look-ahead support\n      begin: '\\\\-(?=[ ]|$)',\n        relevance: 0\n      },\n      hljs.HASH_COMMENT_MODE,\n      {\n        beginKeywords: LITERALS,\n        keywords: {literal: LITERALS}\n      },\n      // numbers are any valid C-style number that\n      // sit isolated from other words\n      {\n        className: 'number',\n        begin: hljs.C_NUMBER_RE + '\\\\b'\n      },\n      STRING\n    ]\n  };\n};\n};"],
"names":["shadow$provide","global","require","module","exports","module.exports","hljs","case_insensitive","aliases","contains","KEY","className","variants","begin","relevance","end","subLanguage","excludeBegin","excludeEnd","UNDERSCORE_IDENT_RE","HASH_COMMENT_MODE","beginKeywords","LITERALS","keywords","literal","C_NUMBER_RE","STRING","BACKSLASH_ESCAPE","TEMPLATE_VARIABLES"]
}
