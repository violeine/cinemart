{"version":3,"sources":["cinemart/notification/view.cljs"],"mappings":"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","names":["cinemart.notification.view/noti-type","cinemart.components.icons/i-shield-exclaimation","cinemart.components.icons/i-exclaimation","cinemart.components.icons/i-check-circle","cinemart.components.icons/i-info-circle","cinemart.notification.view/notification","cljs.core/deref","notis","re_frame.core.subscribe","js/module$node_modules$react_transition_group$cjs$index.TransitionGroup","cljs.core.apply","cljs.core/str","cljs.core.interpose","iter__4529__auto__","s__29156","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","cljs.core/count","b__29158","cljs.core/chunk-buffer","i__29157","map__29159","cljs.core/-nth","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get","map__29161","map__29162","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__29155","cljs.core/chunk-rest","map__29165","cljs.core/first","map__29167","map__29168","cljs.core/cons","cljs.core/rest","uuid","text","class","type","css","icon","js/module$node_modules$react_transition_group$cjs$index.CSSTransition","re-frame.core/dispatch","cinemart.components.icons/i-x","cljs.core/chunk-first"],"sourcesContent":["(ns cinemart.notification.view\n  (:require [re-frame.core :as rf]\n            [reagent.core :as r]\n            [cinemart.notification.subs :as noti]\n            [cinemart.components.icons :refer [i-info-circle i-exclaimation\n                                               i-shield-exclaimation i-check-circle i-x]]\n            [\"react-transition-group\" :refer [TransitionGroup CSSTransition]]\n            [cinemart.notification.events :as notify]))\n\n(def noti-type {:danger {:css [\"bg-red-500\"]\n                         :icon i-shield-exclaimation}\n                :warning {:css [\"bg-yellow-500\"]\n                          :icon i-exclaimation}\n                :success {:css [\"bg-green-500\"]\n                          :icon i-check-circle}\n                :info {:css [\"bg-blue-500\"]\n                       :icon  i-info-circle}})\n\n(defn notification\n  []\n  (let [notis @(rf/subscribe [::noti/get-noti])]\n    [:> TransitionGroup\n     {:component \"div\"\n      :className (apply str (interpose \" \" [\"fixed\"\n                                            \"bottom-0\"\n                                            \"right-0\"\n                                            \"mb-32\"]))}\n     (for\n      [{:keys [uuid text class type]} notis\n       :let [{{:keys [css icon]} type} noti-type]]\n       ^{:key uuid}\n       [:> CSSTransition\n        {:classNames \"slide\"\n         :in true\n         :appear true\n         :timeout 250}\n        [:div.mb-2.w-64.rounded.shadow-md.mr-5\n         {:class class}\n         [:p.text-white.px-3.py-2.min-w-full.flex.justify-between.rounded.shadow-md {:class css}\n          [icon {:class [\"w-8\" \"mr-5\"]}]\n          [:span.mr-5.flex-grow text]\n          [:a {:on-click #(rf/dispatch [::notify/kill-noti uuid])}\n           [i-x {:class [\"w-4\"]}]]]]])]))\n"]}