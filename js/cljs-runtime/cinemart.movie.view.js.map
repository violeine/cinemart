{"version":3,"sources":["cinemart/movie/view.cljs"],"mappings":";AAKA,AAAA,AAAMA;AAAN,AAEE,AAAAC,AAAA,AAAAC,AACO,AAAA,AAAA,AAACU;AADRX,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAE,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAAG,AAAAC,AAAAJ,AAAAA;AAAA,AAAAK,AAAAL,AAAA,AAAcM;AAAd,AAAAD,AAAAL,AAAA,AAAoBO;AAApB,AAAAF,AAAAL,AAAA,AAA6BQ;AAA7B,AAAAH,AAAAL,AAAA,AAAsCS;AAAtC,AAAAJ,AAAAL,AAAA,AAA6CU;AAA7C,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEGE,AAGKN,AACAC,AACOC","names":["cinemart.movie.view/movie","map__29178","cljs.core/deref","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply","cljs.core/hash-map","cljs.core.get","title","overview","homepage","genres","release-date","re_frame.core.subscribe","cinemart.components.container/container"],"sourcesContent":["(ns cinemart.movie.view\n  (:require [re-frame.core :as rf]\n            [cinemart.movie.subs :as movie]\n            [cinemart.components.container :refer [container]]))\n\n(defn movie\n  []\n  (let [{:keys [title overview homepage genres release-date]}\n        @(rf/subscribe [::movie/movie])]\n    [container\n     {}\n     [:div\n      [:p title]\n      [:p overview]\n      [:a {:href homepage} \"homepage\"]]]))\n"]}